const express = require("express");
const router = express.Router();
const SalesController = require('../controllers/sales');
const historyLogger = require('../middleware/historyLogger');
const checkAuth = require('../middleware/check-auth'); // ZABEZPIECZENIA SPRZEDAÅ»Y
const roleAuth = require('../middleware/role-auth'); // ðŸ”’ KONTROLA RÃ“L
const validators = require('../middleware/validators'); // ðŸ”’ WALIDACJA DANYCH

// ========== WSZYSTKIE ENDPOINTY SPRZEDAÅ»OWE WYMAGAJÄ„ AUTORYZACJI ==========
router.get('/', 
    validators.queryValidation,
    validators.handleValidationErrors,
    checkAuth, 
    SalesController.getAllSales
); // ðŸ”’ Wszystkie sprzedaÅ¼e z walidacjÄ…

router.get('/get-all-sales', checkAuth, SalesController.getAllSales); // ðŸ”’ Duplikat

router.get('/filter-by-date-and-point', 
    validators.dateValidation,
    validators.queryValidation,
    validators.handleValidationErrors,
    checkAuth, 
    SalesController.getSalesByDateAndSellingPoint
); // ðŸ”’ Filtrowanie z walidacjÄ… dat

router.post('/save-sales', 
    validators.salesValidation,
    validators.handleValidationErrors,
    checkAuth, 
    SalesController.saveSales
); // ðŸ”’ Zapisywanie sprzedaÅ¼y z walidacjÄ…

router.post('/insert-many-sales', 
    validators.salesValidation,
    validators.handleValidationErrors,
    checkAuth, 
    SalesController.insertManySales
); // ðŸ”’ Masowe dodawanie z walidacjÄ…
router.delete('/delete-all-sales', checkAuth, roleAuth.adminOnly(), SalesController.deleteAllSales); // ðŸ”’ðŸ”’ðŸ”’ TYLKO ADMIN!

// Dynamic routes - teÅ¼ zabezpieczone
router.get('/:salesId', 
    validators.mongoIdValidation,
    validators.handleValidationErrors,
    checkAuth, 
    SalesController.getSalesById
); // ðŸ”’ Konkretna sprzedaÅ¼ z walidacjÄ… ID

router.patch('/update-sales/:salesId', 
    validators.mongoIdValidation,
    validators.salesValidation,
    validators.handleValidationErrors,
    checkAuth, 
    SalesController.updateSalesById
); // ðŸ”’ Aktualizacja z walidacjÄ…

router.delete('/delete-sale/:salesId', 
    validators.mongoIdValidation,
    validators.handleValidationErrors,
    checkAuth, 
    SalesController.deleteSalesById
); // ðŸ”’ Usuwanie z walidacjÄ… ID

module.exports = router;