const express = require("express");
const router = express.Router();
const SalesController = require('../controllers/sales');
const historyLogger = require('../middleware/historyLogger');
const checkAuth = require('../middleware/check-auth'); // ZABEZPIECZENIA SPRZEDAÅ»Y

// ========== WSZYSTKIE ENDPOINTY SPRZEDAÅ»OWE WYMAGAJÄ„ AUTORYZACJI ==========
router.get('/', checkAuth, SalesController.getAllSales); // ðŸ”’ Wszystkie sprzedaÅ¼e
router.get('/get-all-sales', checkAuth, SalesController.getAllSales); // ðŸ”’ Duplikat
router.get('/filter-by-date-and-point', checkAuth, SalesController.getSalesByDateAndSellingPoint); // ðŸ”’ Filtrowanie
router.post('/save-sales', checkAuth, SalesController.saveSales); // ðŸ”’ Zapisywanie sprzedaÅ¼y
router.post('/insert-many-sales', checkAuth, SalesController.insertManySales); // ðŸ”’ Masowe dodawanie
router.delete('/delete-all-sales', checkAuth, SalesController.deleteAllSales); // ðŸ”’ NIEBEZPIECZNE: UsuÅ„ wszystkie

// Dynamic routes - teÅ¼ zabezpieczone
router.get('/:salesId', checkAuth, SalesController.getSalesById); // ðŸ”’ Konkretna sprzedaÅ¼
router.patch('/update-sales/:salesId', checkAuth, SalesController.updateSalesById); // ðŸ”’ Aktualizacja
router.delete('/delete-sale/:salesId', checkAuth, SalesController.deleteSalesById); // ðŸ”’ Usuwanie

module.exports = router;