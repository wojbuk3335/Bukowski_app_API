const express = require('express');
const router = express.Router();
const TransferProcessingController = require('../controllers/transferProcessing');
const checkAuth = require('../middleware/check-auth'); // ğŸ”’ğŸ”’ğŸ”’ PRZETWARZANIE TRANSFERÃ“W - KRYTYCZNE!

// ========== WSZYSTKIE OPERACJE PRZETWARZANIA TRANSFERÃ“W - NAJWYÅ»SZY POZIOM ZABEZPIECZEÅƒ ==========
router.post('/process-all', checkAuth, TransferProcessingController.processAllTransfers); // ğŸ”’ğŸ”’ğŸ”’ Przetwarzanie wszystkich transferÃ³w
router.post('/process-warehouse', checkAuth, TransferProcessingController.processWarehouseItems); // ğŸ”’ğŸ”’ğŸ”’ Przetwarzanie elementÃ³w magazynu
router.post('/process-sales', checkAuth, TransferProcessingController.processSalesItems); // ğŸ”’ğŸ”’ğŸ”’ Przetwarzanie sprzedaÅ¼y
router.post('/process-single', checkAuth, TransferProcessingController.processSingleTransfer); // ğŸ”’ğŸ”’ğŸ”’ Przetwarzanie pojedynczego transferu
router.post('/undo-last', checkAuth, TransferProcessingController.undoLastTransaction); // ğŸ”’ğŸ”’ğŸ”’ CofniÄ™cie ostatniej transakcji
router.get('/last-transaction', checkAuth, TransferProcessingController.getLastTransaction); // ğŸ”’ğŸ”’ğŸ”’ Info o ostatniej transakcji

module.exports = router;
