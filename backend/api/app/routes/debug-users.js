// üîß TYMCZASOWY ENDPOINT DO DEBUGOWANIA U≈ªYTKOWNIK√ìW
// Usu≈Ñ ten plik po rozwiƒÖzaniu problemu!

const express = require('express');
const router = express.Router();
const User = require('../db/models/user');

// UWAGA: Ten endpoint pokazuje wra≈ºliwe dane! 
// U≈ºywaj tylko do debugowania i usu≈Ñ przed produkcjƒÖ!
router.get('/debug-users', async (req, res) => {
    try {
        // Pobierz wszystkich u≈ºytkownik√≥w (bez has≈Ça)
        const users = await User.find({}, {
            email: 1,
            role: 1,
            symbol: 1,
            sellingPoint: 1,
            location: 1,
            createdAt: 1
        }).exec();

        res.status(200).json({
            message: 'üîß DEBUG: Lista u≈ºytkownik√≥w w bazie',
            count: users.length,
            users: users,
            note: 'USU≈É TEN ENDPOINT PO DEBUGOWANIU!'
        });
    } catch (error) {
        res.status(500).json({
            error: error.message
        });
    }
});

// Sprawd≈∫ czy konkretny email istnieje
router.get('/debug-user/:email', async (req, res) => {
    try {
        const email = req.params.email;
        const user = await User.findOne({ email }, {
            email: 1,
            role: 1,
            symbol: 1,
            sellingPoint: 1,
            location: 1,
            createdAt: 1
        }).exec();

        if (user) {
            res.status(200).json({
                message: '‚úÖ U≈ºytkownik znaleziony',
                user: user
            });
        } else {
            res.status(404).json({
                message: '‚ùå U≈ºytkownik nie istnieje w bazie',
                searchedEmail: email
            });
        }
    } catch (error) {
        res.status(500).json({
            error: error.message
        });
    }
});

module.exports = router;